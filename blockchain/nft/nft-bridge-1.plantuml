@startuml


' https://plantuml.com/class-diagram
' https://plantuml.com/sequence-diagram
' https://plantuml-documentation.readthedocs.io/en/latest/formatting/all-skin-params.html
' https://plantuml-documentation.readthedocs.io/en/latest/formatting/all-skin-params.html#class
' https://plantuml.com/creole
' https://www.w3schools.com/colors/colors_names.asp

skinparam {
  'DefaultFontName Consolas
  DefaultFontName Monaco
  'DefaultFontName Lucida Console
  'DefaultMonospacedFontName Consolas
  'DefaultFontStyle bold
  
  BackgroundColor transparent
  PageMargin 10
  BoxPadding 100
  ParticipantPadding 20

  ArrowFontSize 16
  ArrowThickness 1
  MinClassWidth 75
  ClassFontStyle bold
  
  NoteBackgroundColor SeaShell
  NoteBorderColor transparent
  NoteShadowing false
}

skinparam Sequence{
  DividerBorderThickness 1.5
  ReferenceBorderThickness 1.5
  MessageAlignment right

  ArrowColor DarkSlateGray
  ArrowThickness 1.3
  LifeLineBorderColor DarkSlateGray
  LifeLineBorderThickness 1.3

  ActorBorderColor DarkSlateGray
  ActorBackgroundColor GhostWhite
  ParticipantBorderColor DarkSlateGray
  ParticipantBorderThickness 1.5
  ParticipantBackgroundColor GhostWhite

  BoxBackgroundColor transparent
  BoxBorderColor transparent
  
  GroupBorderThickness 1.3
  GroupBorderColor DarkBlue
  GroupBodyBackgroundColor Azure
}

skinparam Group{
  BorderThickness 1.3
  BorderShadowing true
}

hide Circle
hide Footbox
caption NFT Bridging


Actor Owner as owner
Participant "n1:NFT A" as nft1 <<contract>>
Participant "b1:Bridge A" as brd1 <<contract>>
Participant ":Controlloer" as cntrl <<off-chain>>
Participant "b2:Bridge B" as brd2 <<contract>>
Participant "n2:NFT B" as nft2 <<contract>>

owner -> nft1 : approve(b1.addr, m)
owner -> brd1 : requestMoveOut(m, n2, owner.addr2)

brd1 -> cntrl : notify(MoveInRequested)
cntrl -> brd1 : acceptMoveOut
brd1 -> nft1 : transferFrom(owner.addr1, b1.addr, m)

brd1 -> cntrl : notify(MoveInAccepted)
cntrl -> brd2 : requestMoveIn
brd2 -> nft2 : transferFrom
brd2 -> brd2 : moveInCompleted

brd2 -> cntrl : notify(MoveInCompleted)
cntrl -> brd1 : completeMoveOut

owner -> nft2 : ownerOf

...
...

legend
  * token[mirrored].ownr = bridge-contract

  * timer based roll-back
  * optimistic verification
end legend


@enduml